# ---------------------------------------------------------------------
# ðŸ§  Stack Purpose:
# Highly scalable DynamoDB single-table for real-time chat at scale.
# Optimized for 1-1 conversations across thousands of users and millions of messages.
#
# Responsibilities:
#   1. Store user profiles and presence
#   2. Store 1-1 messages grouped by chatId
#   3. Track chat membership (by user)
#   4. Efficiently list user chats and messages using GSIs
#
# ðŸ§° Validated with:
#   sam validate --template-file core-infra.yaml --region us-east-1 --lint
# ---------------------------------------------------------------------

AWSTemplateFormatVersion: '2010-09-09'

Description: >
  Single-table DynamoDB design to support real-time messaging at scale
  across thousands of users and conversations.

# ---------------------------------------------------------------------
# ðŸ§¾ Parameters:
# Allows the root stack to pass the environment stage (e.g., dev, qa, prod)
# ---------------------------------------------------------------------
Parameters:
  Stage:
    Type: String
    Description: Deployment stage for environment separation (e.g. dev, qa, prod)

Resources:

  # ---------------------------------------------------------------------
  # ðŸ“¦ ChatAppTable:
  # This is the central DynamoDB table for all chat-related data.
  # It stores users, messages, sessions, and chat participation
  # using a single-table pattern for horizontal scalability.
  # ---------------------------------------------------------------------
  ChatAppTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub chat-app-table-${Stage}  # Unique name per environment

      BillingMode: PAY_PER_REQUEST
      # Pay-per-request scales automatically with usage

      AttributeDefinitions:
        - AttributeName: PK
          AttributeType: S
        - AttributeName: SK
          AttributeType: S
        - AttributeName: GSI1PK
          AttributeType: S
        - AttributeName: GSI1SK
          AttributeType: S
        - AttributeName: Type
          AttributeType: S
        - AttributeName: name
          AttributeType: S
        - AttributeName: lastUpdated
          AttributeType: S

      KeySchema:
        - AttributeName: PK
          KeyType: HASH
        - AttributeName: SK
          KeyType: RANGE

      GlobalSecondaryIndexes:
        # GSI for listing all chats that a user participates in
        - IndexName: GSI1
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: GSI1SK
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

        # GSI for user profile lookups by type (optional, not always needed)
        - IndexName: TypeNameIndex
          KeySchema:
            - AttributeName: Type
              KeyType: HASH
            - AttributeName: name
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

        # GSI for querying chat messages ordered by timestamp
        - IndexName: ChatMessageIndex
          KeySchema:
            - AttributeName: GSI1PK
              KeyType: HASH
            - AttributeName: lastUpdated
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

      TimeToLiveSpecification:
        AttributeName: ttl
        Enabled: true

      Tags:
        - Key: Project
          Value: ScalableChatApp
        - Key: Environment
          Value: !Ref Stage

# ---------------------------------------------------------------------
# ðŸ“¤ Outputs:
# Used by Lambdas, APIs, or other stacks to access this table
# ---------------------------------------------------------------------
Outputs:

  ChatAppTableName:
    Description: Name of the chat DynamoDB table
    Value: !Ref ChatAppTable

  ChatAppTableArn:
    Description: ARN of the chat DynamoDB table
    Value: !GetAtt ChatAppTable.Arn
