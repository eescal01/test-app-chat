AWSTemplateFormatVersion: '2010-09-09'  # Standard version for CloudFormation templates.
Transform: AWS::Serverless-2016-10-31   # Enables use of AWS SAM syntax and features.

# -----------------------------------------------------------------------------
# üßæ TEMPLATE DESCRIPTION
# -----------------------------------------------------------------------------
# This nested stack sets up the full authentication infrastructure using
# Amazon Cognito and Google OAuth 2.0.
#
# Main components:
# 1. Cognito User Pool (backing user directory)
# 2. Hosted UI domain (for login redirect)
# 3. Google Identity Provider (federated login only)
# 4. App Client configured for OAuth 2.0 Code Grant Flow (no password-based login)
#
# This configuration allows passwordless login using a Google account.
Description: >
  Sets up passwordless login with Cognito using Google OAuth 2.0 only.
  Includes a User Pool, hosted UI domain, IdP (Google), and App Client.

# -----------------------------------------------------------------------------
# üîß INPUT PARAMETERS
# -----------------------------------------------------------------------------
# These values are passed from the parent stack and allow customization
# based on deployment stage or external secrets from Google Cloud Console.
Parameters:

  Stage:
    Type: String
    Default: dev
    Description: |
      Deployment environment (e.g., dev, qa, prod).
      Used for naming and scoping resources to specific environments.

  GoogleClientId:
    Type: String
    Description: |
      Client ID from your Google Cloud Console OAuth 2.0 credentials.
      Used to configure Google as an external identity provider.

  GoogleClientSecret:
    Type: String
    Description: |
      Client secret from Google Cloud Console, used to exchange auth codes for tokens.

  PostConfirmationLambdaArn:
    Type: String
    Description: ARN of Lambda to run on Cognito PostConfirmation trigger


# -----------------------------------------------------------------------------
# üèóÔ∏è RESOURCES
# -----------------------------------------------------------------------------
# Core Cognito resources necessary to enable OAuth-based login with Google only.
Resources:

  # -----------------------------------------------------------------------------
  # 1Ô∏è‚É£ Cognito User Pool
  # -----------------------------------------------------------------------------
  # The central user directory for the application.
  # We're using email as the unique ID and enabling admin-only user creation.
  # Since this is OAuth-based, users are federated ‚Äî they log in via Google.
  UserPool :
    Type : AWS::Cognito::UserPool
    Properties :
      UserPoolName : !Sub google-auth-userpool-${Stage}
      AutoVerifiedAttributes :
        - email
      UsernameConfiguration :
        CaseSensitive : false
      AdminCreateUserConfig :
        AllowAdminCreateUserOnly : false
      AccountRecoverySetting :
        RecoveryMechanisms :
          - Name : verified_email
            Priority : 1
      LambdaConfig :
        PostConfirmation : !Ref PostConfirmationLambdaArn

  # -----------------------------------------------------------------------------
  # 2Ô∏è‚É£ Hosted Cognito Domain
  # -----------------------------------------------------------------------------
  # Used to serve the Cognito-hosted login UI and redirect after OAuth login.
  UserPoolDomain:
    Type: AWS::Cognito::UserPoolDomain
    Properties:
      Domain: !Sub google-auth-domain-${Stage}  # Must be globally unique
      UserPoolId: !Ref UserPool

  # -----------------------------------------------------------------------------
  # 3Ô∏è‚É£ Google OAuth Identity Provider
  # -----------------------------------------------------------------------------
  # Registers Google as a federated IdP for the user pool.
  # Defines the scopes and endpoint URLs required for OAuth 2.0.
  GoogleIdP:
    Type: AWS::Cognito::UserPoolIdentityProvider
    Properties:
      ProviderName: Google
      ProviderType: Google
      UserPoolId: !Ref UserPool
      ProviderDetails:
        client_id: !Ref GoogleClientId
        client_secret: !Ref GoogleClientSecret
        authorize_scopes: "openid email profile"
        attributes_url: https://www.googleapis.com/oauth2/v3/userinfo
        attributes_url_add_attributes: "true"
        oidc_issuer: https://accounts.google.com
        authorize_url: https://accounts.google.com/o/oauth2/v2/auth
        token_url: https://oauth2.googleapis.com/token
      AttributeMapping:
        email: email
        name: name
        given_name: given_name
        family_name: family_name
        picture: picture  # Maps user profile picture from Google to Cognito

  # -----------------------------------------------------------------------------
  # 4Ô∏è‚É£ Cognito App Client
  # -----------------------------------------------------------------------------
  # This is the client your frontend application uses to initiate the OAuth flow.
  # Note:
  #   - Only Google is allowed as IdP
  #   - Only "code" flow is enabled (OAuth Authorization Code Grant)
  #   - No password login allowed (ExplicitAuthFlows = [])
  AppClient:
    Type: AWS::Cognito::UserPoolClient
    DependsOn : GoogleIdP  # Ensures IdP is created before the client references it
    Properties :
      ClientName : !Sub google-oauth-client-${Stage}
      UserPoolId : !Ref UserPool
      ExplicitAuthFlows : [ ]  # ‚ùå Disables username/password login
      SupportedIdentityProviders :
        - Google
      AllowedOAuthFlows :
        - code  # Most secure: exchanges code for tokens via backend
      AllowedOAuthScopes :
        - openid
        - email
        - profile
      AllowedOAuthFlowsUserPoolClient : true
      CallbackURLs :
        - https://main.d2p1llmpk1i4a9.amplifyapp.com/callback  # Your frontend login redirect URI
      LogoutURLs :
        - https://main.d2p1llmpk1i4a9.amplifyapp.com/callback  # Redirect after logout
      RefreshTokenValidity : 30  # Refresh token expires in 30 days
      AccessTokenValidity : 1    # Access token lasts 1 hour
      IdTokenValidity : 1        # ID token lasts 1 hour
      GenerateSecret : false     # No client secret required for public frontend apps

# -----------------------------------------------------------------------------
# üì§ OUTPUTS
# -----------------------------------------------------------------------------
# These values are exposed to the root stack or to developers
# for integration with other stacks or applications.
Outputs:

  UserPoolId:
    Description: Cognito User Pool ID
    Value: !Ref UserPool

  UserPoolDomainURL:
    Description: |
      Fully qualified domain name (FQDN) of the Cognito-hosted login UI.
      This is where users are redirected to authenticate with Google.
    Value: !Sub https://google-auth-domain-${Stage}.auth.${AWS::Region}.amazoncognito.com

  AppClientId:
    Description: |
      Cognito App Client ID required by frontend apps to authenticate users
      and exchange codes for tokens.
    Value: !Ref AppClient
